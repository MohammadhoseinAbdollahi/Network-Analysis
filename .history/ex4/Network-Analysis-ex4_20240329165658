import networkx as nx
import matplotlib.pyplot as plt
import numpy as np

# Number of nodes
n = 3000

# Initialize the probability
p = 10 ** -3

# Number of graphs
num_graphs = 5

# Create a figure and a grid of subplots
fig, axs = plt.subplots(3, num_graphs, figsize=(15, 15))
for i in range(500,3000,500):
    G = nx.erdos_renyi_graph(i, p)

    # Find the two most distanced nodes in the G graph
    diameter = nx.diameter(G)

    # Find the shortest path between the two most distanced nodes
    shortest_path = nx.shortest_path(G, 0, diameter)

    # Plot the diameter parameter with the number of nodes
    plt.plot(i, diameter, 'ro')

    # Plot the shortest path parameter with the number of nodes
    plt.plot(i, len(shortest_path) - 1, 'bo')

    # Set the x-axis label
    plt.xlabel('Number of Nodes')

    # Set the y-axis label
    plt.ylabel('Parameter Value')

    # Set the title of the plot
    plt.title('Parameter Values vs Number of Nodes')

    # Show the plot
    plt.show()

    

