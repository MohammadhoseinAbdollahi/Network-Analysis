# Python
import networkx as nx
import matplotlib.pyplot as plt
import numpy as np

# Number of nodes
n = 100

# Initialize the probability
p = 0.005

# Number of graphs
num_graphs = 5

# Create a figure and a grid of subplots
fig, axs = plt.subplots(num_graphs, num_graphs, figsize=(15, 15))

for i in range(num_graphs):
    for j in range(num_graphs):
        # Create an Erdős–Rényi random graph
        G = nx.erdos_renyi_graph(n, p)
        
        # Compute the degree distribution
        degree_sequence = [d for n, d in G.degree()]
        
        # Plot the degree distribution as a bar chart on the i-th subplot
        axs[i, j].bar(np.arange(n), degree_sequence, alpha=0.1, color='b')
        axs[i, j].set_title(f'p={p:.2f}')
        
          # Compute metrics
        average_degree = np.mean([d for n, d in G.degree()])
        clustering_coefficient = nx.average_clustering(G)
        assortativity_coefficient = nx.degree_assortativity_coefficient(G)
        is_connected = nx.is_connected(G)
        diameter = nx.diameter(G) if is_connected else None
        
        # Print the metrics
        print(f"Graph {i+1}-{j+1}:")
        print(f"Average Degree: {average_degree}")
        print(f"Clustering Coefficient: {clustering_coefficient}")
        print(f"Assortativity Coefficient: {assortativity_coefficient}")
        print(f"Is Connected: {is_connected}")
        if is_connected:
            print(f"Diameter: {diameter}")
        print()
        
        # Increase the probability
        p += 0.04

# Set the labels
fig.text(0.5, 0.04, 'Node', ha='center')
fig.text(0.04, 0.5, 'Degree', va='center', rotation='vertical')
fig.suptitle('Degree Distribution of Erdős–Rényi Random Graphs')

# Compute metrics for each graph
for i in range(num_graphs):
    for j in range(num_graphs):
        
        
      
# Show the plot
plt.tight_layout()
plt.show()