import networkx as nx
import random
import matplotlib.pyplot as plt
from networkx import triangular_lattice_graph

m=40

n=40

G=triangular_lattice_graph(m, n, periodic=False, with_positions=True, create_using=None)

print(f"Number of nodes: {G.number_of_nodes()}")
print(f"Number of edges: {G.number_of_edges()}")
print(f"Min degree: {min(dict(G.degree()).values())}")
print(f"Max degree: {max(dict(G.degree()).values())}")
print(f"Transitivity: {nx.transitivity(G)}")
print(f"Average clustering: {nx.average_clustering(G)}")
diameter = nx.diameter(G)
num_triangles = nx.triangles(G)
clustering_coefficient = nx.clustering(G)

print(f"Diameter: {diameter}")
print(f"Number of triangles: {num_triangles}")
print(f"Transitivity: {nx.transitivity(G)}")
print(f"Clustering coefficient: {clustering_coefficient}")

# Clustering coefficient of individual nodes
for node in G.nodes():
    node_clustering_coefficient = nx.clustering(G, node)
    print(f"Clustering coefficient of node {node}: {node_clustering_coefficient}")
    

nx.draw(G, with_labels=True)
plt.show()
